{"version":3,"file":"default-node_modules_angular_material_fesm2015_menu_mjs.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2015/menu.mjs"],"sourcesContent":["import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, takeUntil, filter, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        var _a;\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n_MatMenuContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuContentBase, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuContentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent extends _MatMenuContentBase {\n}\nMatMenuContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n        var _a;\n        super();\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        (_a = _parentMenu === null || _parentMenu === void 0 ? void 0 : _parentMenu.addItem) === null || _a === void 0 ? void 0 : _a.call(_parentMenu, this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return ((_a = clone.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';\n    }\n    _setHighlighted(isHighlighted) {\n        var _a;\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n    _hasFocus() {\n        return this._document && this._document.activeElement === this._getHostElement();\n    }\n}\nMatMenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { role: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions, \n    // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n    _changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n        this._directDescendantItems.changes.subscribe((itemsList) => {\n            var _a;\n            // Move focus to another item, if the active item is removed from the list.\n            // We need to debounce the callback, because multiple items might be removed\n            // in quick succession.\n            const manager = this._keyManager;\n            if (this._panelAnimationState === 'enter' && ((_a = manager.activeItem) === null || _a === void 0 ? void 0 : _a._hasFocus())) {\n                const items = itemsList.toArray();\n                const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n                if (items[index] && !items[index].disabled) {\n                    manager.setActiveItem(index);\n                }\n                else {\n                    manager.setNextItemActive();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n                return;\n        }\n        // Don't allow the event to propagate if we've already handled it, or it may\n        // end up reaching other overlays that were opened earlier (see #22694).\n        event.stopPropagation();\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // Wait for `onStable` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            let menuPanel = null;\n            if (this._directDescendantItems.length) {\n                // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n                // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n                // because the panel is inside an `ng-template`. We work around it by starting from one of\n                // the items and walking up the DOM.\n                menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n            }\n            // If an item in the menuPanel is already focused, avoid overriding the focus.\n            if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n                const manager = this._keyManager;\n                manager.setFocusOrigin(origin).setFirstItemActive();\n                // If there's no active item at this point, it means that all the items are disabled.\n                // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n                // give _some_ feedback to screen readers.\n                if (!manager.activeItem && menuPanel) {\n                    menuPanel.focus();\n                }\n            }\n        });\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        var _a;\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n        // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuBase, inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions, changeDetectorRef) {\n        super(elementRef, ngZone, defaultOptions, changeDetectorRef);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenu, selector: \"mat-menu\", host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::before{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::before{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\nclass _MatMenuTriggerBase {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        const positionStrategy = overlayConfig.positionStrategy;\n        this._setPosition(positionStrategy);\n        overlayConfig.hasBackdrop =\n            this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n            this.menu._directDescendantItems.changes.pipe(takeUntil(this.menu.close)).subscribe(() => {\n                // Re-adjust the position without locking when the amount of items\n                // changes so that the overlay is allowed to pick a new optimal position.\n                positionStrategy.withLockedPosition(false).reapplyLastPosition();\n                positionStrategy.withLockedPosition(true);\n            });\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        var _a;\n        (_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                // @breaking-change 15.0.0 Remove null check for `ngZone`.\n                // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n                // updating something in the view so we need to bring it back in.\n                if (this._ngZone) {\n                    this._ngZone.run(() => this.menu.setPositionClasses(posX, posY));\n                }\n                else {\n                    this.menu.setPositionClasses(posX, posY);\n                }\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\n_MatMenuTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuTriggerBase, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3$1.Directionality, optional: true }, { token: i1.FocusMonitor }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuTriggerBase, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { attributes: { \"aria-haspopup\": \"true\" }, listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-expanded\": \"menuOpen || null\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_SCROLL_STRATEGY]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: MatMenuItem, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i3$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i1.FocusMonitor }, { type: i0.NgZone }];\n    }, propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n}\nMatMenuTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatMenu,\n        MatMenuItem,\n        MatMenuTrigger,\n        MatMenuContent] });\nMatMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[CommonModule, MatCommonModule, MatRippleModule, OverlayModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuTrigger,\n                        MatMenuContent,\n                    ],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };\n"],"names":["i1","FocusKeyManager","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","coerceBooleanProperty","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","ESCAPE","hasModifierKey","ENTER","SPACE","i0","InjectionToken","Directive","Inject","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Input","QueryList","EventEmitter","TemplateRef","ContentChildren","ViewChild","ContentChild","Output","Self","NgModule","Subject","Subscription","merge","of","asapScheduler","startWith","switchMap","take","takeUntil","filter","delay","trigger","state","style","transition","animate","TemplatePortal","DomPortalOutlet","i3","DOCUMENT","CommonModule","i2","mixinDisableRipple","mixinDisabled","MatCommonModule","MatRippleModule","i1$1","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","i3$1","CdkScrollableModule","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MAT_MENU_CONTENT","_MatMenuContentBase","constructor","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_changeDetectorRef","_attached","attach","context","_a","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","markForCheck","next","isAttached","ngOnDestroy","dispose","ɵfac","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","ChangeDetectorRef","ɵdir","type","undefined","decorators","args","MatMenuContent","provide","useExisting","selector","providers","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_elementRef","_focusMonitor","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","call","focus","origin","options","focusVia","_getHostElement","ngAfterViewInit","monitor","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","clone","cloneNode","icons","querySelectorAll","i","length","remove","textContent","trim","_setHighlighted","isHighlighted","_hasFocus","activeElement","ElementRef","FocusMonitor","ɵcmp","MatRipple","NgIf","exportAs","inputs","host","changeDetection","OnPush","encapsulation","None","template","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_classList","_panelAnimationState","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","hasBackdrop","closed","close","panelId","value","ngDevMode","setPositionClasses","panelClass","classes","previousPanelClass","_previousPanelClass","split","forEach","className","classList","ngOnInit","ngAfterContentInit","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","tabOut","subscribe","emit","changes","pipe","items","map","item","focusedItem","updateActiveItem","itemsList","manager","activeItem","toArray","index","Math","max","min","activeItemIndex","setActiveItem","setNextItemActive","destroy","unsubscribe","itemChanges","_item","_handleKeydown","keyCode","parentMenu","direction","setFocusOrigin","onKeydown","focusFirstItem","onStable","menuPanel","first","closest","contains","document","setFirstItemActive","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","Object","keys","find","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","_onAnimationStart","toState","scrollTop","_allItems","reset","notifyOnChanges","NgZone","descendants","ariaLabel","ariaLabelledby","ariaDescribedby","templateRef","lazyContent","MatMenu","ngZone","defaultOptions","changeDetectorRef","NgClass","animations","styles","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","_MatMenuTriggerBase","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_scrollStrategy","_parentMaterialMenu","addEventListener","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","positionStrategy","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","withLockedPosition","reapplyLastPosition","updatePosition","_setIsMenuOpen","_setMenuElevation","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withGrowAfterOpen","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","run","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","Directionality","MatMenuTrigger","MatMenuModule","ɵmod","ɵinj","imports","exports","declarations"],"sourceRoot":"webpack:///"}