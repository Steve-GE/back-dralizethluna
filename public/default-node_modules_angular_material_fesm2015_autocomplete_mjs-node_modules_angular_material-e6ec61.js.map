{"version":3,"file":"default-node_modules_angular_material_fesm2015_autocomplete_mjs-node_modules_angular_material-e6ec61.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2015/autocomplete.mjs","./node_modules/@angular/material/fesm2015/sidenav.mjs","./node_modules/@angular/material/fesm2015/slider.mjs"],"sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, TemplateRef, Directive, Inject, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getEventTarget } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { hasModifierKey, ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { startWith, switchMap, take, filter, map, tap, delay } from 'rxjs/operators';\nimport * as i2$1 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(class {\n});\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults, platform) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n        // Safari using VoiceOver. We should occasionally check back to see whether the bug\n        // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n        // option altogether.\n        this.inertGroups = (platform === null || platform === void 0 ? void 0 : platform.SAFARI) || false;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() {\n        return this._isOpen && this.showPanel;\n    }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() {\n        return this._autoActiveFirstOption;\n    }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            if (this.isOpen) {\n                this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n            }\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteBase, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatAutocompleteBase, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", panelWidth: \"panelWidth\", classList: [\"class\", \"classList\"] }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, viewQueries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true, static: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                    }] }, { type: i1.Platform }];\n    }, propDecorators: { template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], displayWith: [{\n                type: Input\n            }], autoActiveFirstOption: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], optionSelected: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], optionActivated: [{\n                type: Output\n            }], classList: [{\n                type: Input,\n                args: ['class']\n            }] } });\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocomplete, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatAutocomplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatAutocomplete, selector: \"mat-autocomplete\", inputs: { disableRipple: \"disableRipple\" }, host: { classAttribute: \"mat-autocomplete\" }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], queries: [{ propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }], exportAs: [\"matAutocomplete\"], usesInheritance: true, ngImport: i0, template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocomplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-autocomplete', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'matAutocomplete', inputs: ['disableRipple'], host: {\n                        'class': 'mat-autocomplete',\n                    }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"] }]\n        }], propDecorators: { optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }] } });\n\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true,\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of changes to the selection state of the autocomplete options. */\n        this.optionSelections = defer(() => {\n            const options = this.autocomplete ? this.autocomplete.options : null;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable.pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() {\n        return this._autocompleteDisabled;\n    }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            // The `NgZone.onStable` always emits outside of the Angular zone,\n            // so all the subscriptions from `_subscribeToClosingActions()` are also outside of the Angular zone.\n            // We should manually run in Angular zone to update UI after panel closing.\n            this._zone.run(() => {\n                this.autocomplete.closed.emit();\n            });\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef\n            ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached))\n            : of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => (event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend')).pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = _getEventTarget(event);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return (this._overlayAttached &&\n                clickTarget !== this._element.nativeElement &&\n                // Normally focus moves inside `mousedown` so this condition will almost always be\n                // true. Its main purpose is to handle the case where the input is focused from an\n                // outside click which propagates up to the `body` listener within the same sequence\n                // and causes the panel to close immediately (see #3106).\n                this._document.activeElement !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                !!this._overlayRef &&\n                !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve().then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const hasModifier = hasModifierKey(event);\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifier) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen && !hasModifier) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (keyCode === TAB || (isArrowKey && !hasModifier && this.panelOpen)) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    _handleClick() {\n        if (this._canOpen() && !this.panelOpen) {\n            this.openPanel();\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return (merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            // The `NgZone.onStable` always emits outside of the Angular zone, thus we have to re-enter\n            // the Angular zone. This will lead to change detection being called outside of the Angular\n            // zone and the `autocomplete.opened` will also emit outside of the Angular.\n            this._zone.run(() => {\n                const wasOpen = this.panelOpen;\n                this._resetActiveItem();\n                this.autocomplete._setVisibility();\n                this._changeDetectorRef.detectChanges();\n                if (this.panelOpen) {\n                    this._overlayRef.updatePosition();\n                    // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                    // event, because we may not have emitted it when the panel was attached. This\n                    // can happen if the users opens the panel and there are no options, but the\n                    // options come in slightly later or as a result of the value changing.\n                    if (wasOpen !== this.panelOpen) {\n                        this.autocomplete.opened.emit();\n                    }\n                }\n            });\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event)));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith\n            ? this.autocomplete.displayWith(value)\n            : value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        const source = event && event.source;\n        if (source) {\n            this._clearPreviousSelectedOption(source);\n            this._setTriggerValue(source.value);\n            this._onChange(source.value);\n            this.autocomplete._emitSelectEvent(source);\n            this._element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        var _a;\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n                id: (_a = this._formField) === null || _a === void 0 ? void 0 : _a.getLabelId(),\n            });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._closeKeyEventStream.next();\n                    this._resetActiveItem();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        var _a;\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: (_a = this._defaults) === null || _a === void 0 ? void 0 : _a.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass },\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        const autocomplete = this.autocomplete;\n        if (autocomplete.autoActiveFirstOption) {\n            // Note that we go through `setFirstItemActive`, rather than `setActiveItem(0)`, because\n            // the former will find the next enabled option, if the first one is disabled.\n            autocomplete._keyManager.setFirstItemActive();\n        }\n        else {\n            autocomplete._keyManager.setActiveItem(-1);\n        }\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else if (autocomplete.panel) {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, deps: [{ token: i0.ElementRef }, { token: i1$1.Overlay }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: MAT_AUTOCOMPLETE_SCROLL_STRATEGY }, { token: i2$1.Directionality, optional: true }, { token: MAT_FORM_FIELD, host: true, optional: true }, { token: DOCUMENT, optional: true }, { token: i3.ViewportRuler }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatAutocompleteTriggerBase, inputs: { autocomplete: [\"matAutocomplete\", \"autocomplete\"], position: [\"matAutocompletePosition\", \"position\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.Overlay }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n                    }] }, { type: i2$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }, {\n                        type: Host\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { autocomplete: [{\n                type: Input,\n                args: ['matAutocomplete']\n            }], position: [{\n                type: Input,\n                args: ['matAutocompletePosition']\n            }], connectedTo: [{\n                type: Input,\n                args: ['matAutocompleteConnectedTo']\n            }], autocompleteAttribute: [{\n                type: Input,\n                args: ['autocomplete']\n            }], autocompleteDisabled: [{\n                type: Input,\n                args: ['matAutocompleteDisabled']\n            }] } });\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatAutocompleteTrigger, selector: \"input[matAutocomplete], textarea[matAutocomplete]\", host: { listeners: { \"focusin\": \"_handleFocus()\", \"blur\": \"_onTouched()\", \"input\": \"_handleInput($event)\", \"keydown\": \"_handleKeydown($event)\", \"click\": \"_handleClick()\" }, properties: { \"attr.autocomplete\": \"autocompleteAttribute\", \"attr.role\": \"autocompleteDisabled ? null : \\\"combobox\\\"\", \"attr.aria-autocomplete\": \"autocompleteDisabled ? null : \\\"list\\\"\", \"attr.aria-activedescendant\": \"(panelOpen && activeOption) ? activeOption.id : null\", \"attr.aria-expanded\": \"autocompleteDisabled ? null : panelOpen.toString()\", \"attr.aria-owns\": \"(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id\", \"attr.aria-haspopup\": \"autocompleteDisabled ? null : \\\"listbox\\\"\" }, classAttribute: \"mat-autocomplete-trigger\" }, providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"matAutocompleteTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                    host: {\n                        'class': 'mat-autocomplete-trigger',\n                        '[attr.autocomplete]': 'autocompleteAttribute',\n                        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n                        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                        // a little earlier. This avoids issues where IE delays the focusing of the input.\n                        '(focusin)': '_handleFocus()',\n                        '(blur)': '_onTouched()',\n                        '(input)': '_handleInput($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(click)': '_handleClick()',\n                    },\n                    exportAs: 'matAutocompleteTrigger',\n                    providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteOriginBase, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteOriginBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatAutocompleteOriginBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteOriginBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteOrigin, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatAutocompleteOrigin, selector: \"[matAutocompleteOrigin]\", exportAs: [\"matAutocompleteOrigin\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matAutocompleteOrigin]',\n                    exportAs: 'matAutocompleteOrigin',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatAutocompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteModule, declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin], imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule], exports: [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\nMatAutocompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteModule, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[OverlayModule, MatOptionModule, MatCommonModule, CommonModule], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule],\n                    exports: [\n                        MatAutocomplete,\n                        MatAutocompleteTrigger,\n                        MatAutocompleteOrigin,\n                        CdkScrollableModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, ViewChild, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/platform';\nimport * as i4 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDrawerContent, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, providers: [\n        {\n            provide: CdkScrollable,\n            useExisting: MatDrawerContent,\n        },\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatDrawerContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatDrawerContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange =\n            // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n            new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value !== this._position) {\n            // Static inputs in Ivy are set before the element is in the DOM.\n            if (this._isAttached) {\n                this._updatePositionInParent(value);\n            }\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        const activeEl = this._doc.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n        this._isAttached = true;\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n        // Only update the DOM position when the sidenav is positioned at\n        // the end since we project the sidenav before the content by default.\n        if (this._position === 'end') {\n            this._updatePositionInParent('end');\n        }\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        (_a = this._anchor) === null || _a === void 0 ? void 0 : _a.remove();\n        this._anchor = null;\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n        const element = this._elementRef.nativeElement;\n        const parent = element.parentNode;\n        if (newPosition === 'end') {\n            if (!this._anchor) {\n                this._anchor = this._doc.createComment('mat-drawer-anchor');\n                parent.insertBefore(this._anchor, element);\n            }\n            parent.appendChild(element);\n        }\n        else if (this._anchor) {\n            this._anchor.parentNode.insertBefore(element, this._anchor);\n        }\n    }\n}\nMatDrawer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDrawer, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, viewQueries: [{ propertyName: \"_content\", first: true, predicate: [\"content\"], descendants: true }], exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDrawerContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DRAWER_CONTAINER]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }], _content: [{\n                type: ViewChild,\n                args: ['content']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end)));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDrawerContainer, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatDrawerContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatDrawerContent, selector: \"mat-drawer-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i4.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSidenavContent, selector: \"mat-sidenav-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, providers: [\n        {\n            provide: CdkScrollable,\n            useExisting: MatSidenavContent,\n        },\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatSidenavContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSidenavContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n}\nMatSidenav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSidenav, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSidenavContainer, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatSidenavContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatSidenavContent, selector: \"mat-sidenav-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSidenavModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenavModule, declarations: [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent], imports: [CommonModule, MatCommonModule, CdkScrollableModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent] });\nMatSidenavModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenavModule, imports: [[CommonModule, MatCommonModule, CdkScrollableModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, CdkScrollableModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\n\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true,\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding and what the user is using to slide it with.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = null;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this._touchId = isTouchEvent(event)\n                    ? getTouchIdForSlider(event, this._elementRef.nativeElement)\n                    : undefined;\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    const oldValue = this.value;\n                    this._isSliding = 'pointer';\n                    this._lastPointerEvent = event;\n                    this._focusHostElement();\n                    this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    this._bindGlobalEvents(event);\n                    this._focusHostElement();\n                    this._updateValueFromPosition(pointerPosition);\n                    this._valueOnSlideStart = oldValue;\n                    // Despite the fact that we explicitly bind active events, in some cases the browser\n                    // still dispatches non-cancelable events which cause this call to throw an error.\n                    // There doesn't appear to be a good way of avoiding them. See #23820.\n                    if (event.cancelable) {\n                        event.preventDefault();\n                    }\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding === 'pointer') {\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    // Prevent the slide from selecting anything else.\n                    event.preventDefault();\n                    const oldValue = this.value;\n                    this._lastPointerEvent = event;\n                    this._updateValueFromPosition(pointerPosition);\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding === 'pointer') {\n                if (!isTouchEvent(event) ||\n                    typeof this._touchId !== 'number' ||\n                    // Note that we use `changedTouches`, rather than `touches` because it\n                    // seems like in most cases `touches` is empty for `touchend` events.\n                    findMatchingTouch(event.changedTouches, this._touchId)) {\n                    event.preventDefault();\n                    this._removeGlobalEvents();\n                    this._isSliding = null;\n                    this._touchId = undefined;\n                    if (this._valueOnSlideStart != this.value && !this.disabled) {\n                        this._emitChangeEvent();\n                    }\n                    this._valueOnSlideStart = this._lastPointerEvent = null;\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() {\n        return this._invert;\n    }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() {\n        return this._thumbLabel;\n    }\n    set thumbLabel(value) {\n        this._thumbLabel = coerceBooleanProperty(value);\n    }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() {\n        return this._tickInterval;\n    }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v, 0);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() {\n        return this._clamp(this._percent);\n    }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : '',\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = (this._tickIntervalPercent / 2) * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`,\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`,\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`,\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled ||\n            hasModifierKey(event) ||\n            (this._isSliding && this._isSliding !== 'keyboard')) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n    }\n    _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n            this._isSliding = null;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        // Pre-clamp the current value since it's allowed to be\n        // out of bounds when assigned programmatically.\n        const clampedValue = this._clamp(this.value || 0, this.min, this.max);\n        this.value = this._clamp(clampedValue + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        let tickIntervalPercent;\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = (trackSize * this.step) / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            tickIntervalPercent = (this.tickInterval * this.step) / (this.max - this.min);\n        }\n        this._tickIntervalPercent = isSafeNumber(tickIntervalPercent) ? tickIntervalPercent : 0;\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        const percentage = ((value || 0) - this.min) / (this.max - this.min);\n        return isSafeNumber(percentage) ? percentage : 0;\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlider, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }, { token: 'tabindex', attribute: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSlider, selector: \"mat-slider\", inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", value: \"value\", displayWith: \"displayWith\", valueText: \"valueText\", vertical: \"vertical\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, host: { attributes: { \"role\": \"slider\" }, listeners: { \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\", \"keyup\": \"_onKeyup()\", \"mouseenter\": \"_onMouseenter()\", \"selectstart\": \"$event.preventDefault()\" }, properties: { \"tabIndex\": \"tabIndex\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuemin\": \"min\", \"attr.aria-valuenow\": \"value\", \"attr.aria-valuetext\": \"valueText == null ? displayValue : valueText\", \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-slider-disabled\": \"disabled\", \"class.mat-slider-has-ticks\": \"tickInterval\", \"class.mat-slider-horizontal\": \"!vertical\", \"class.mat-slider-axis-inverted\": \"_shouldInvertAxis()\", \"class.mat-slider-invert-mouse-coords\": \"_shouldInvertMouseCoords()\", \"class.mat-slider-sliding\": \"_isSliding\", \"class.mat-slider-thumb-label-showing\": \"thumbLabel\", \"class.mat-slider-vertical\": \"vertical\", \"class.mat-slider-min-value\": \"_isMinValue()\", \"class.mat-slider-hide-last-tick\": \"disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-slider mat-focus-indicator\" }, providers: [MAT_SLIDER_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_sliderWrapper\", first: true, predicate: [\"sliderWrapper\"], descendants: true }], exportAs: [\"matSlider\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], directives: [{ type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', exportAs: 'matSlider', providers: [MAT_SLIDER_VALUE_ACCESSOR], host: {\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                        '(keyup)': '_onKeyup()',\n                        '(mouseenter)': '_onMouseenter()',\n                        // On Safari starting to slide temporarily triggers text selection mode which\n                        // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                        '(selectstart)': '$event.preventDefault()',\n                        'class': 'mat-slider mat-focus-indicator',\n                        'role': 'slider',\n                        '[tabIndex]': 'tabIndex',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuemin]': 'min',\n                        '[attr.aria-valuenow]': 'value',\n                        // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                        // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                        // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                        // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                        // to the same value that we set on the slider's thumb which will be truncated.\n                        '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-slider-disabled]': 'disabled',\n                        '[class.mat-slider-has-ticks]': 'tickInterval',\n                        '[class.mat-slider-horizontal]': '!vertical',\n                        '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if mouse coordinates need to be inverted.\n                        '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                        '[class.mat-slider-sliding]': '_isSliding',\n                        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                        '[class.mat-slider-vertical]': 'vertical',\n                        '[class.mat-slider-min-value]': '_isMinValue()',\n                        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, inputs: ['disabled', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { invert: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], thumbLabel: [{\n                type: Input\n            }], tickInterval: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], displayWith: [{\n                type: Input\n            }], valueText: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], input: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _sliderWrapper: [{\n                type: ViewChild,\n                args: ['sliderWrapper']\n            }] } });\n/** Checks if number is safe for calculation */\nfunction isSafeNumber(value) {\n    return !isNaN(value) && isFinite(value);\n}\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n    let point;\n    if (isTouchEvent(event)) {\n        // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n        // If that's the case, attribute the first touch to all active sliders. This should still cover\n        // the most common case while only breaking multi-touch.\n        if (typeof id === 'number') {\n            point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n        }\n        else {\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            point = event.touches[0] || event.changedTouches[0];\n        }\n    }\n    else {\n        point = event;\n    }\n    return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n    for (let i = 0; i < event.touches.length; i++) {\n        const target = event.touches[i].target;\n        if (sliderHost === target || sliderHost.contains(target)) {\n            return event.touches[i].identifier;\n        }\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSliderModule, declarations: [MatSlider], imports: [CommonModule, MatCommonModule], exports: [MatSlider, MatCommonModule] });\nMatSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSliderModule, imports: [[CommonModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSlider, MatCommonModule],\n                    declarations: [MatSlider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n"],"names":["ActiveDescendantKeyManager","coerceBooleanProperty","coerceStringArray","i0","InjectionToken","EventEmitter","TemplateRef","Directive","Inject","ViewChild","Input","Output","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","forwardRef","Optional","Host","NgModule","mixinDisableRipple","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOption","MatOptionSelectionChange","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MatOptionModule","MatCommonModule","Subscription","Subject","defer","merge","of","fromEvent","i1","_getEventTarget","i2","DOCUMENT","CommonModule","i1$1","Overlay","OverlayConfig","OverlayModule","i3","CdkScrollableModule","hasModifierKey","ESCAPE","ENTER","UP_ARROW","DOWN_ARROW","TAB","TemplatePortal","NG_VALUE_ACCESSOR","i4","MAT_FORM_FIELD","startWith","switchMap","take","filter","map","tap","delay","i2$1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","constructor","source","option","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","platform","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_classList","id","inertGroups","SAFARI","_autoActiveFirstOption","isOpen","value","classList","length","reduce","className","_setVisibilityClasses","nativeElement","ngAfterContentInit","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","ngOnDestroy","unsubscribe","_setScrollTop","scrollTop","panel","_getScrollTop","markForCheck","_emitSelectEvent","event","_getPanelAriaLabelledby","labelId","ariaLabel","labelExpression","ariaLabelledby","_visibleClass","_hiddenClass","ɵfac","ChangeDetectorRef","ElementRef","Platform","ɵdir","type","undefined","decorators","args","template","static","panelWidth","MatAutocomplete","arguments","ɵcmp","provide","useExisting","NgClass","selector","encapsulation","None","changeDetection","OnPush","exportAs","inputs","host","providers","styles","optionGroups","descendants","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_defaults","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","changes","pipe","onSelectionChange","onStable","_scrollStrategy","autocompleteDisabled","ngAfterViewInit","window","_getWindow","runOutsideAngular","addEventListener","ngOnChanges","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","openPanel","_attachOverlay","_floatLabel","closePanel","_resetLabel","run","hasAttached","detach","_closingActionsSubscription","detectChanges","panelClosingActions","tabOut","_getOutsideClickStream","detachments","activeOption","activeItem","clickTarget","formField","customOrigin","connectedTo","elementRef","contains","overlayElement","writeValue","Promise","resolve","then","_setTriggerValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","_handleKeydown","keyCode","hasModifier","preventDefault","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","_scrollToOption","activeItemIndex","_handleInput","target","parseFloat","_previousValue","_handleFocus","_handleClick","shouldAnimate","floatLabel","_animateAndLockLabel","_subscribeToClosingActions","firstStable","optionChanges","reapplyLastPosition","wasOpen","_setValueAndClose","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","skip","forEach","selected","deselect","_a","ngDevMode","overlayRef","_portal","getLabelId","create","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","positionStrategy","_getOverlayPosition","direction","panelClass","overlayPanelClass","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setFirstItemActive","setActiveItem","element","readOnly","defaultView","labelCount","_getHostElement","newScrollPosition","offsetTop","offsetHeight","ViewContainerRef","NgZone","Directionality","ViewportRuler","MatFormField","_MatAutocompleteOriginBase","MatAutocompleteOrigin","MatAutocompleteModule","ɵmod","ɵinj","imports","exports","declarations","CdkScrollable","i5","QueryList","ContentChild","coerceNumberProperty","mapTo","takeUntil","distinctUntilChanged","debounceTime","trigger","state","style","transition","animate","ANIMATION_MODULE_TYPE","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","ngZone","_contentMarginChanges","MatDrawerContainer","ScrollDispatcher","MatDrawer","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_interactivityChecker","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","o","openedStart","e","fromState","toState","indexOf","_closedStream","closedStart","_destroyed","onPositionChanged","_modeChanged","_takeFocus","_isFocusWithinDrawer","_restoreFocus","_openedVia","disableClose","close","x","y","_isAttached","_updatePositionInParent","mode","_updateFocusTrapState","autoFocus","_autoFocus","toggle","_forceFocus","isFocusable","tabIndex","callback","removeAttribute","_focusByCssSelector","elementToFocus","querySelector","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","focusOrigin","focusVia","blur","activeEl","ngAfterContentChecked","isBrowser","destroy","_anchor","remove","open","openedVia","_closeViaBackdropClick","_setOpen","result","restoreFocus","_getWidth","offsetWidth","enabled","newPosition","parent","parentNode","createComment","insertBefore","appendChild","FocusTrapFactory","FocusMonitor","InteractivityChecker","animations","_content","viewportRuler","defaultAutosize","_animationMode","_drawers","backdropClick","_doCheckSubject","_contentMargins","left","right","_validateDrawers","updateContentMargins","_autosize","start","_start","end","_end","autosize","hasBackdrop","_backdropOverride","scrollable","_userContent","_allDrawers","drawer","reset","item","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_right","ngDoCheck","_isPushed","add","_setContainerClass","onMicrotaskEmpty","isAdd","_onBackdropClicked","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_isShowingBackdrop","NgIf","MatSidenavContent","changeDetectorRef","container","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenavModule","Attribute","mixinTabIndex","mixinColor","mixinDisabled","RIGHT_ARROW","LEFT_ARROW","HOME","END","PAGE_DOWN","PAGE_UP","normalizePassiveListenerOptions","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","MatSlider","MatSliderChange","_MatSliderBase","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","_pointerDown","isTouchEvent","button","_touchId","getTouchIdForSlider","pointerPosition","getPointerPositionOnPage","oldValue","_lastPointerEvent","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","cancelable","_emitInputEvent","_pointerMove","_pointerUp","findMatchingTouch","changedTouches","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","invert","max","v","_calculatePercentage","min","step","_roundToDecimal","toString","split","pop","thumbLabel","tickInterval","toFixed","vertical","displayValue","_blurHostElement","percent","_clamp","_shouldInvertAxis","_isMinValue","_getThumbGap","_getTrackBackgroundStyles","axis","scale","sign","_shouldInvertMouseCoords","transform","_getTrackFillStyles","display","_getTicksContainerStyles","_getDirection","offset","_getTicksStyles","tickSize","backgroundSize","rotate","shouldInvertAxis","side","_getThumbContainerStyles","invertOffset","monitor","origin","stopMonitoring","_getSliderDimensions","_updateTickIntervalPercent","_onFocus","_onBlur","_onKeydown","_increment","_onKeyup","triggerEvent","document","isTouch","moveEventName","endEventName","numSteps","clampedValue","pos","top","size","height","posComponent","exactValue","_calculateValue","closestValue","Math","round","_createChangeEvent","tickIntervalPercent","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","isSafeNumber","percentage","_sliderWrapper","NgStyle","valueText","isNaN","isFinite","point","touches","clientX","clientY","i","identifier","sliderHost","MatSliderModule"],"sourceRoot":"webpack:///"}