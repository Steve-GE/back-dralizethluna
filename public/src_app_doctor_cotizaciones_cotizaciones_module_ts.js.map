{"version":3,"file":"src_app_doctor_cotizaciones_cotizaciones_module_ts.js","mappings":"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","sources":["./src/app/doctor/cotizaciones/cotizacion/cotizacion.component.ts","./src/app/doctor/cotizaciones/cotizacion/cotizacion.component.html","./src/app/doctor/cotizaciones/cotizacion/cotizacion.service.ts","./src/app/doctor/cotizaciones/cotizacion/modals/delete-cotizacion/delete-cotizacion.component.ts","./src/app/doctor/cotizaciones/cotizacion/modals/delete-cotizacion/delete-cotizacion.component.html","./src/app/doctor/cotizaciones/cotizaciones-routing.module.ts","./src/app/doctor/cotizaciones/cotizaciones.module.ts"],"sourcesContent":["import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { UnsubscribeOnDestroyAdapter } from '../../../shared/UnsubscribeOnDestroyAdapter';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { SelectionModel, DataSource } from '@angular/cdk/collections';\nimport { fromEvent, BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CotizacionService } from './cotizacion.service';\nimport { CotizacionModel } from './cotizacion.model';\nimport { DeleteCotizacionComponent } from './modals/delete-cotizacion/delete-cotizacion.component';\nimport { AddArchivoCotizacionComponent } from './modals/add-archivo-cotizacion/add-archivo-cotizacion.component';\n\n@Component({\n  selector: 'app-cotizacion',\n  templateUrl: './cotizacion.component.html',\n  styleUrls: ['./cotizacion.component.sass']\n})\nexport class CotizacionComponent\nextends UnsubscribeOnDestroyAdapter\nimplements OnInit {\n\n  displayedColumns = [\n    // \"select\",\n    \"img\",\n    \"name\",\n    // \"department\",\n    // \"specialization\",\n    // \"degree\",\n    // \"mobile\",\n    \"archivo\",\n    \"actions\",\n  ];\n  exampleDatabase: CotizacionService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<CotizacionModel>(true, []);\n  index: number;\n  id: number;\n  doctors: CotizacionModel | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public doctorsService: CotizacionService,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(AddArchivoCotizacionComponent, {\n      data: {\n        doctors: this.doctors,\n        action: \"add\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataServicex\n        this.exampleDatabase.dataChange.value.unshift(\n          this.doctorsService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-success\",\n          \"Add Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(AddArchivoCotizacionComponent, {\n      data: {\n        doctors: row,\n        action: \"edit\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] =\n          this.doctorsService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          \"black\",\n          \"Edit Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(DeleteCotizacionComponent, {\n      data: row,\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-danger\",\n          \"Delete Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n\n\n  editCallImg(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(AddArchivoCotizacionComponent, {\n      data: {\n        doctors: row,\n        action: \"edit\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n       /*  const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] =\n          this.doctorsService.getDialogData();\n        // And lastly refresh table */\n        this.refresh();\n        this.refreshTable();\n        this.showNotification(\n          \"black\",\n          \"Edit Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n\n      this.refreshTable();\n      this.selection = new SelectionModel<CotizacionModel>(true, []);\n    });\n    this.showNotification(\n      \"snackbar-danger\",\n      totalSelect + \" Record Delete Successfully...!!!\",\n      \"bottom\",\n      \"center\"\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new CotizacionService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\n      () => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      }\n    );\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, \"\", {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n}\nexport class ExampleDataSource extends DataSource<CotizacionModel> {\n  filterChange = new BehaviorSubject(\"\");\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: CotizacionModel[] = [];\n  renderedData: CotizacionModel[] = [];\n  constructor(\n    public exampleDatabase: CotizacionService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<CotizacionModel[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllCotizaciones();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((cotizacion: CotizacionModel) => {\n            const searchStr = (\n              cotizacion.nombre +\n              cotizacion.ruta \n              // doctors.specialization +\n              // doctors.degree +\n              // doctors.email +\n              // doctors.mobile\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: CotizacionModel[]): CotizacionModel[] {\n    if (!this._sort.active || this._sort.direction === \"\") {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = \"\";\n      let propertyB: number | string = \"\";\n      switch (this._sort.active) {\n        case \"id\":\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case \"name\":\n          [propertyA, propertyB] = [a.nombre, b.nombre];\n          break;\n        case \"email\":\n          [propertyA, propertyB] = [a.ruta, b.ruta];\n          break; \n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n      );\n    });\n  }\n\n  descargar(){\n\n  }\n\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Lista de Cotizaciones'\" [items]=\"['Cotizaciones']\" [active_item]=\"'Tabla'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Cotizaciones</strong>\n                        </h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Buscar\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"img\">\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\"> Img\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" (click)=\"$event.stopPropagation()\"\n                    class=\"table-img tbl-col-width-per-10\">\n                    <mat-icon aria-hidden=\"false\" class=\"material-icons-two-tone\">description</mat-icon>\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Nombre</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (click)=\"$event.stopPropagation()\"> {{row.nombre}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"archivo\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Archivo</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (click)=\"$event.stopPropagation()\"> \n                    <a href=\"{{row.ruta}}\"  download=\"{{row.nombre}}\" target=\"_blank\">\n                      Descargar\n                    </a> \n                </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Acciones</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { CotizacionModel } from \"./cotizacion.model\"\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\nimport { environment } from \"src/environments/environment\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CotizacionService extends UnsubscribeOnDestroyAdapter {\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<CotizacionModel[]> = new BehaviorSubject<CotizacionModel[]>([]);\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): CotizacionModel[] {\r\n    return this.dataChange.value;\r\n  }\r\n\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n\r\n  /** CRUD METHODS */\r\n\r\n  getAllCotizaciones(): void {\r\n    this.subs.sink = this.httpClient.get<CotizacionModel[]>(`${environment.apiUrl}/getAllCotizaciones`).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  deleteCotizacion(id: number): void {\r\n    console.log(id);\r\n\r\n     this.httpClient.delete(`${environment.apiUrl}/deleteCotizacion` + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );\r\n  }\r\n \r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { CotizacionService } from '../../cotizacion.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-cotizacion',\n  templateUrl: './delete-cotizacion.component.html',\n  styleUrls: ['./delete-cotizacion.component.sass']\n})\nexport class DeleteCotizacionComponent {\n\n constructor(\n    public dialogRef: MatDialogRef<DeleteCotizacionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public cotizacionService: CotizacionService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.cotizacionService.deleteCotizacion(this.data.id);\n    console.log('Hola');\n  }\n\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>¿Segura de eliminar el archivo?</h3>\n    <div mat-dialog-content> \n    </div>\n    <div mat-dialog-actions class=\"mb-1\">\n      <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n        Delete\n      </button>\n      <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Page404Component } from '../../authentication/page404/page404.component';\nimport { CotizacionComponent } from './cotizacion/cotizacion.component';\n\nconst routes: Routes = [\n  {\n    path: \"cotizacion\",\n    component: CotizacionComponent,\n  },\n  { path: \"**\", component: Page404Component },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CotizacionesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CotizacionesRoutingModule } from './cotizaciones-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n// import { MatFormFieldModule } from '@angular/material/form-field';\n// import { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n// import { MatButtonModule } from '@angular/material/button';\n// import { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\n// import { MatRadioModule } from '@angular/material/radio';\n// import { MatSelectModule } from '@angular/material/select';\n// import { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\n// import { MatDatepickerModule } from '@angular/material/datepicker';\n// import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ComponentsModule } from '../../shared/components/components.module'; \n// import { MatAutocompleteModule } from '@angular/material/autocomplete';\n// import { MatButtonToggleModule } from '@angular/material/button-toggle';\n// import { MatCardModule } from '@angular/material/card';\n// import { MatGridListModule } from '@angular/material/grid-list';\n// import { MatListModule } from '@angular/material/list';\n// import { MatMenuModule } from '@angular/material/menu';\n// import { MatSidenavModule } from '@angular/material/sidenav';\n// import { MatSlideToggleModule } from '@angular/material/slide-toggle';\n// import { MatSliderModule } from '@angular/material/slider';\n// import { MatStepperModule } from '@angular/material/stepper';\n// import { MatTooltipModule } from '@angular/material/tooltip';\n// import { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n// import { NgxMaskModule } from 'ngx-mask';\n// import { ColorPickerModule } from 'ngx-color-picker';\nimport { DeleteCotizacionComponent } from './cotizacion/modals/delete-cotizacion/delete-cotizacion.component';\nimport { AddArchivoCotizacionComponent } from './cotizacion/modals/add-archivo-cotizacion/add-archivo-cotizacion.component';\nimport { CotizacionComponent } from './cotizacion/cotizacion.component';\n\n\n@NgModule({\n  declarations: [\n    CotizacionComponent,\n    DeleteCotizacionComponent,\n    AddArchivoCotizacionComponent\n  ],\n  imports: [\n    CommonModule,\n    CotizacionesRoutingModule,\n    // FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    // MatFormFieldModule,\n    // MatInputModule,\n    MatSnackBarModule,\n    // MatButtonModule,\n    // MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    // MatRadioModule,\n    // MatSelectModule,\n    // MatCheckboxModule,\n\n    MaterialFileInputModule,\n    // MatDatepickerModule,\n    // MatProgressSpinnerModule,\n    ComponentsModule,\n    SharedModule, \n    // MatAutocompleteModule,\n    // MatButtonToggleModule,\n    // MatCardModule,\n    // MatGridListModule,\n    // MatListModule,\n    // MatMenuModule,\n    // MatRadioModule,\n    // MatSidenavModule,\n    // MatSlideToggleModule,\n    // MatSliderModule,\n    // MatStepperModule,\n    // MatTooltipModule,\n    // OwlDateTimeModule,\n    // OwlNativeDateTimeModule,\n    // NgxMaskModule,\n    // ColorPickerModule,\n    // MatFormFieldModule\n  ]\n})\nexport class CotizacionesModule { }\n"],"names":[],"sourceRoot":"webpack:///"}