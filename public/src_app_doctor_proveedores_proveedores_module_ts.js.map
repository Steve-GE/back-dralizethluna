{"version":3,"file":"src_app_doctor_proveedores_proveedores_module_ts.js","mappings":"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","sources":["./src/app/doctor/proveedores/proveedores-lista/dialogs/delete/delete.component.ts","./src/app/doctor/proveedores/proveedores-lista/dialogs/delete/delete.component.html","./src/app/doctor/proveedores/proveedores-lista/dialogs/form-dialog/form-dialog.component.ts","./src/app/doctor/proveedores/proveedores-lista/dialogs/form-dialog/form-dialog.component.html","./src/app/doctor/proveedores/proveedores-lista/proveedores-lista.component.ts","./src/app/doctor/proveedores/proveedores-lista/proveedores-lista.component.html","./src/app/doctor/proveedores/proveedores-lista/proveedores.model.ts","./src/app/doctor/proveedores/proveedores-lista/proveedores.service.ts","./src/app/doctor/proveedores/proveedores-routing.module.ts","./src/app/doctor/proveedores/proveedores.module.ts"],"sourcesContent":["import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { ProveedoresService } from '../../proveedores.service';\n@Component({\n  selector: \"app-delete\",\n  templateUrl: \"./delete.component.html\",\n  styleUrls: [\"./delete.component.sass\"],\n})\nexport class DeleteDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public proveedoresService: ProveedoresService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.proveedoresService.deleteProveedores(this.data.idProveedores);\n    console.log(this.data.idProveedores)\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Empresa: </span>{{data.empresa}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Proveedor: </span>{{ data.proveedor }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Teléfono: </span>{{data.telefono}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from \"@angular/forms\";\nimport { formatDate } from \"@angular/common\";\nimport { Proveedores } from '../../proveedores.model';\nimport { ProveedoresService } from '../../proveedores.service';\n@Component({\n  selector: \"app-form-dialog\",\n  templateUrl: \"./form-dialog.component.html\",\n  styleUrls: [\"./form-dialog.component.sass\"],\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  doctorsForm: FormGroup;\n  proveedores: Proveedores;\n  \n\n  mostrarAdd:     boolean = false;\n  mostrarUpdate:  boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public proveedoresService: ProveedoresService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === \"edit\") {\n      // this.dialogTitle = data.proveedores.name;\n      this.proveedores = data.proveedores;\n      this.mostrarUpdate = true;\n    } else {\n      this.dialogTitle = \"Nuevo Proveedor\";\n      this.proveedores = new Proveedores();\n      this.mostrarAdd = true;\n    }\n    this.doctorsForm = this.createContactForm();\n  }\n  formControl = new FormControl(\"\", [\n    Validators.required,\n    // Validators.email,\n  ]);\n  // getErrorMessage() {\n  //   return this.formControl.hasError(\"required\")\n  //     ? \"Required field\"\n  //     : this.formControl.hasError(\"email\")\n  //     ? \"Not a valid email\"\n  //     : \"\";\n  // }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      idProveedor: [this.proveedores.idProveedores],\n      empresa: [this.proveedores.empresa,[Validators.required]],\n      proveedor: [this.proveedores.proveedor],\n      categoria: [this.proveedores.categoria],\n      rfc: [this.proveedores.rfc],\n      telefono: [this.proveedores.telefono]\n\n      // date: [\n      //   formatDate(this.doctors.date, \"yyyy-MM-dd\", \"en\"),\n      //   [Validators.required],\n      // ],\n      // specialization: [this.doctors.specialization],\n      // mobile: [this.doctors.mobile],\n      // department: [this.doctors.department],\n      // degree: [this.doctors.degree],\n      // address: [this.doctors.address],\n      // notas: [this.doctors.notas],\n\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.proveedoresService.addProveedor(this.doctorsForm.getRawValue());\n  }\n\n  public confirmUpdate(): void {\n    this.proveedoresService.updateProveedores(this.doctorsForm.getRawValue());\n  }\n\n  getFile($event: any):void {\n    console.log($event);\n  }\n\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <!-- <img [src]='doctors.img' alt=\"avatar\" style=\"width: 30px;\"> -->\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\n            Actualizar Proveedor</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"doctorsForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Empresa</mat-label>\n            <input matInput formControlName=\"empresa\">\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('empresa').hasError('required')\">\n              Empresa is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Proveedor</mat-label>\n            <input matInput formControlName=\"proveedor\">\n            <mat-icon matSuffix>business_center</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('proveedor').hasError('required')\">\n              Proveedor is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Categoría</mat-label>\n            <input matInput formControlName=\"categoria\">\n            <mat-icon matSuffix>flag</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('categoria').hasError('required')\">\n              Categoria is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>RFC</mat-label>\n            <input matInput formControlName=\"rfc\">\n            <mat-icon matSuffix>school</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('rfc').hasError('required')\">\n              RFC is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Celular</mat-label>\n            <input matInput formControlName=\"telefono\" type=\"number\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('telefono').hasError('required')\">\n              Celular is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n  \n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" *ngIf=\"mostrarAdd\" [disabled]=\"!doctorsForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Guardar</button>\n              <button mat-raised-button color=\"primary\" [type]=\"submit\" *ngIf=\"mostrarUpdate\" [disabled]=\"!doctorsForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmUpdate()\">Actualizar</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UnsubscribeOnDestroyAdapter } from '../../../shared/UnsubscribeOnDestroyAdapter';\nimport { SelectionModel, DataSource } from '@angular/cdk/collections'; \nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\n// import { ImgDialogComponent } from './dialogs/img-dialog/img-dialog.component';\nimport { fromEvent, BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Proveedores } from './proveedores.model';\nimport { ProveedoresService } from './proveedores.service';\n\n@Component({\n  selector: 'app-proveedores-lista',\n  templateUrl: './proveedores-lista.component.html',\n  styleUrls: ['./proveedores-lista.component.sass']\n})\nexport class ProveedoresListaComponent   extends UnsubscribeOnDestroyAdapter\nimplements OnInit\n{\ndisplayedColumns = [ \n  \"img\",\n  \"name\",\n  \"department\",\n  \"specialization\",\n  \"degree\",\n  \"mobile\", \n  \"actions\",\n];\nexampleDatabase: ProveedoresService | null;\ndataSource: ExampleDataSource | null;\nselection = new SelectionModel<Proveedores>(true, []);\nindex: number;\nid: number;\nproveedores: Proveedores | null;\nconstructor(\n  public httpClient: HttpClient,\n  public dialog: MatDialog,\n  public ProveedoresService: ProveedoresService,\n  private snackBar: MatSnackBar\n) {\n  super();\n}\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n@ViewChild(MatSort, { static: true }) sort: MatSort;\n@ViewChild(\"filter\", { static: true }) filter: ElementRef;\nngOnInit() {\n  this.loadData();\n}\nrefresh() {\n  this.loadData();\n}\naddNew() {\n  let tempDirection;\n  if (localStorage.getItem(\"isRtl\") === \"true\") {\n    tempDirection = \"rtl\";\n  } else {\n    tempDirection = \"ltr\";\n  }\n  const dialogRef = this.dialog.open(FormDialogComponent, {\n    data: {\n      proveedores: this.proveedores,\n      action: \"add\",\n    },\n    direction: tempDirection,\n  });\n  this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n    if (result === 1) {\n      // After dialog is closed we're doing frontend updates\n      // For add we're just pushing a new row inside DataServicex\n      this.exampleDatabase.dataChange.value.unshift(\n        this.ProveedoresService.getDialogData()\n      );\n      this.refreshTable();\n      this.showNotification(\n        \"snackbar-success\",\n        \"Add Record Successfully...!!!\",\n        \"bottom\",\n        \"center\"\n      );\n    }\n  });\n}\neditCall(row) {\n  this.id = row.id;\n  let tempDirection;\n  if (localStorage.getItem(\"isRtl\") === \"true\") {\n    tempDirection = \"rtl\";\n  } else {\n    tempDirection = \"ltr\";\n  }\n  const dialogRef = this.dialog.open(FormDialogComponent, {\n    data: {\n      proveedores: row,\n      action: \"edit\",\n    },\n    direction: tempDirection,\n  });\n  this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n    if (result === 1) {\n      // When using an edit things are little different, firstly we find record inside DataService by id\n      const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n        (x) => x.idProveedores === this.id\n      );\n      // Then you update that record using data from dialogData (values you enetered)\n      this.exampleDatabase.dataChange.value[foundIndex] =\n        this.ProveedoresService.getDialogData();\n      // And lastly refresh table\n      this.refreshTable();\n      this.showNotification(\n        \"black\",\n        \"Edit Record Successfully...!!!\",\n        \"bottom\",\n        \"center\"\n      );\n    }\n  });\n}\ndeleteItem(row) {\n  this.id = row.id;\n  let tempDirection;\n  if (localStorage.getItem(\"isRtl\") === \"true\") {\n    tempDirection = \"rtl\";\n  } else {\n    tempDirection = \"ltr\";\n  }\n  const dialogRef = this.dialog.open(DeleteDialogComponent, {\n    data: row,\n    direction: tempDirection,\n  });\n  this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n    if (result === 1) {\n      const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n        (x) => x.idProveedores === this.id\n      );\n      // for delete we use splice in order to remove single object from DataService\n      this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n      this.refreshTable();\n      this.showNotification(\n        \"snackbar-danger\",\n        \"Delete Record Successfully...!!!\",\n        \"bottom\",\n        \"center\"\n      );\n    }\n  });\n}\n\n \n\nprivate refreshTable() {\n  this.paginator._changePageSize(this.paginator.pageSize);\n}\n/** Whether the number of selected elements matches the total number of rows. */\nisAllSelected() {\n  const numSelected = this.selection.selected.length;\n  const numRows = this.dataSource.renderedData.length;\n  return numSelected === numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmasterToggle() {\n  this.isAllSelected()\n    ? this.selection.clear()\n    : this.dataSource.renderedData.forEach((row) =>\n        this.selection.select(row)\n      );\n}\nremoveSelectedRows() {\n  const totalSelect = this.selection.selected.length;\n  this.selection.selected.forEach((item) => {\n    const index: number = this.dataSource.renderedData.findIndex(\n      (d) => d === item\n    );\n    // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n    this.exampleDatabase.dataChange.value.splice(index, 1);\n\n    this.refreshTable();\n    this.selection = new SelectionModel<Proveedores>(true, []);\n  });\n  this.showNotification(\n    \"snackbar-danger\",\n    totalSelect + \" Record Delete Successfully...!!!\",\n    \"bottom\",\n    \"center\"\n  );\n}\npublic loadData() {\n  this.exampleDatabase = new ProveedoresService(this.httpClient);\n  this.dataSource = new ExampleDataSource(\n    this.exampleDatabase,\n    this.paginator,\n    this.sort\n  );\n  this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\n    () => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    }\n  );\n}\nshowNotification(colorName, text, placementFrom, placementAlign) {\n  this.snackBar.open(text, \"\", {\n    duration: 2000,\n    verticalPosition: placementFrom,\n    horizontalPosition: placementAlign,\n    panelClass: colorName,\n  });\n}\n}\nexport class ExampleDataSource extends DataSource<Proveedores> {\nfilterChange = new BehaviorSubject(\"\");\nget filter(): string {\n  return this.filterChange.value;\n}\nset filter(filter: string) {\n  this.filterChange.next(filter);\n}\nfilteredData: Proveedores[] = [];\nrenderedData: Proveedores[] = [];\nconstructor(\n  public exampleDatabase: ProveedoresService,\n  public paginator: MatPaginator,\n  public _sort: MatSort\n) {\n  super();\n  // Reset to the first page when the user changes the filter.\n  this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n}\n/** Connect function called by the table to retrieve one stream containing the data to render. */\nconnect(): Observable<Proveedores[]> {\n  // Listen for any changes in the base data, sorting, filtering, or pagination\n  const displayDataChanges = [\n    this.exampleDatabase.dataChange,\n    this._sort.sortChange,\n    this.filterChange,\n    this.paginator.page,\n  ];\n  this.exampleDatabase.getAllProveedores();\n  return merge(...displayDataChanges).pipe(\n    map(() => {\n      // Filter data\n      this.filteredData = this.exampleDatabase.data\n        .slice()\n        .filter((proveedores: Proveedores) => {\n          const searchStr = (\n            proveedores.empresa +\n            proveedores.proveedor +\n            proveedores.categoria +\n            proveedores.rfc +\n            proveedores.telefono\n          ).toLowerCase();\n          return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n        });\n      // Sort filtered data\n      const sortedData = this.sortData(this.filteredData.slice());\n      // Grab the page's slice of the filtered sorted data.\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      this.renderedData = sortedData.splice(\n        startIndex,\n        this.paginator.pageSize\n      );\n      return this.renderedData;\n    })\n  );\n}\ndisconnect() {}\n/** Returns a sorted copy of the database data. */\nsortData(data: Proveedores[]): Proveedores[] {\n  if (!this._sort.active || this._sort.direction === \"\") {\n    return data;\n  }\n  return data.sort((a, b) => {\n    let propertyA: number | string = \"\";\n    let propertyB: number | string = \"\";\n    switch (this._sort.active) {\n      case \"id\":\n        [propertyA, propertyB] = [a.idProveedores, b.idProveedores];\n        break;\n      case \"name\":\n        [propertyA, propertyB] = [a.empresa, b.empresa];\n        break;\n      case \"email\":\n        [propertyA, propertyB] = [a.proveedor, b.proveedor];\n        break; \n      case \"time\":\n        [propertyA, propertyB] = [a.rfc, b.rfc];\n        break;\n      case \"mobile\":\n        [propertyA, propertyB] = [a.telefono, b.telefono];\n        break;\n    }\n    const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n    const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n    return (\n      (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n    );\n  });\n}\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n      <div class=\"block-header\">\n        <!-- breadcrumb -->\n        <app-breadcrumb [title]=\"'Lista de Proveedores'\" [items]=\"['Proveedores']\" [active_item]=\"'Tabla'\"></app-breadcrumb>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div class=\"card\">\n            <div class=\"body\">\n              <div class=\"table-responsive\">\n                <div class=\"materialTableHeader\">\n                  <div class=\"row\">\n                    <div class=\"col-8\">\n                      <ul class=\"header-buttons-left ms-0\">\n                        <li class=\"dropdown\">\n                          <h2>\n                            <strong>Proveedores</strong></h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Buscar\" type=\"text\" #filter class=\"browser-default search-field\"\n                            aria-label=\"Search box\">\n                        </li>\n                        <li>\n                          <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                            <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                              <mat-icon class=\"col-white\">delete</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4\">\n                      <ul class=\"header-buttons\">\n                        <li>\n                          <div class=\"icon-button-demo\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                              <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"icon-button-demo\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                              <mat-icon class=\"col-white\">refresh</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                  <!-- Checkbox Column -->\n                  <ng-container matColumnDef=\"select\">\n                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                      </mat-checkbox>\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                      <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                      </mat-checkbox>\n                    </mat-cell>\n                  </ng-container>\n                  <!-- ID Column -->\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"img\">\n                    <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\"> Img\n                    </mat-header-cell>\n                    <mat-cell mat-cell *matCellDef=\"let row\" (click)=\"$event.stopPropagation()\" (click)=\"editCallImg(row)\" class=\"table-img tbl-col-width-per-10\"> \n                      <!-- <img\n                        [src]=\"row.img\" /> -->\n                        <mat-icon aria-hidden=\"false\" class=\"material-icons-two-tone\"  >local_shipping</mat-icon>\n\n                    </mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"name\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Empresa</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\"> {{row?.empresa}}</mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"department\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Proveedor</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\"> {{row?.proveedor}}</mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"specialization\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Categoria</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\"> {{row.categoria}}</mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"degree\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>RFC</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\"> {{row.rfc}}</mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"mobile\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Telefono</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\"> {{row.telefono}}</mat-cell>\n                  </ng-container>\n                  <!-- <ng-container matColumnDef=\"date\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Joining Date</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\n                  </ng-container> -->\n                  <!-- actions -->\n                  <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Acciones</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                      <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\"\n                        class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                      </button>\n                      <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\"\n                        class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button>\n                    </mat-cell>\n                  </ng-container>\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                  <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                    [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                </mat-table>\n                <!-- Loading spinner -->\n                <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                  </mat-progress-spinner>\n                </div>\n                <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                  [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                  No results\n                </div>\n                <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                  [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                </mat-paginator>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  ","export class Proveedores {\r\n    idProveedores: number;\r\n    empresa: string;\r\n    proveedor: string;\r\n    categoria: string;\r\n    rfc: string;\r\n    telefono: string;\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Proveedores } from \"./proveedores.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\nimport { environment } from \"src/environments/environment\";\r\n@Injectable({providedIn: 'root'})\r\nexport class ProveedoresService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = \"assets/data/doctors.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Proveedores[]> = new BehaviorSubject<Proveedores[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Proveedores[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllProveedores(): void {\r\n    this.subs.sink = this.httpClient.get<Proveedores[]>(`${environment.apiUrl}/getAllProveedores`).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addProveedor(proveedores: Proveedores): void {\r\n    this.dialogData = proveedores;\r\n\r\n     this.httpClient.post(`${environment.apiUrl}/addProveedor`, proveedores).subscribe(data => {\r\n      this.dialogData = proveedores;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });\r\n  }\r\n  updateProveedores(proveedores: Proveedores): void {\r\n    this.dialogData = proveedores;\r\n    console.log(proveedores);\r\n\r\n    this.httpClient.put(`${environment.apiUrl}/updateProveedores`  + proveedores.idProveedores, proveedores).subscribe(data => {\r\n      this.dialogData = proveedores;\r\n      console.log(data);\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n      console.log('Error Update Doctors');\r\n    }\r\n  );\r\n  }\r\n  deleteProveedores(id: number): void {\r\n    console.log(id);\r\n\r\n     this.httpClient.delete(`${environment.apiUrl}/deleteProveedores` + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Page404Component } from '../../authentication/page404/page404.component';\nimport { ProveedoresListaComponent } from './proveedores-lista/proveedores-lista.component';\n\nconst routes: Routes = [\n  {\n    path: \"lista\",\n    component: ProveedoresListaComponent,\n  },\n  { path: \"**\", component: Page404Component },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProveedoresRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProveedoresRoutingModule } from './proveedores-routing.module';\nimport { ProveedoresListaComponent } from './proveedores-lista/proveedores-lista.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { TablesRoutingModule } from '../../tables/tables-routing.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ComponentsModule } from '../../shared/components/components.module';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FormsRoutingModule } from '../../forms/forms-routing.module'; \nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { DeleteDialogComponent } from './proveedores-lista/dialogs/delete/delete.component';\nimport { FormDialogComponent } from './proveedores-lista/dialogs/form-dialog/form-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    ProveedoresListaComponent,\n    DeleteDialogComponent,\n    FormDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    ProveedoresRoutingModule,\n    // FormsModule,\n    // ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    // MatFormFieldModule,\n    // MatInputModule,\n    MatSnackBarModule,\n    // MatButtonModule,\n    // MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    // MatToolbarModule,\n    // MatDatepickerModule,\n    // MatSelectModule,\n    // MatRadioModule,\n    // MatMenuModule,\n    // MatCheckboxModule,\n    MaterialFileInputModule,\n    // MatProgressSpinnerModule,\n    ComponentsModule,\n    SharedModule,\n    // MatTabsModule,\n    // MatFormFieldModule,\n    // TablesRoutingModule,\n    // NgxDatatableModule,\n    // NgbModule,\n    // MatCardModule,\n    \n    // FormsRoutingModule, \n    // MatAutocompleteModule,\n    // MatButtonToggleModule,\n    // MatGridListModule,\n    // MatListModule,\n    // MatSidenavModule,\n    // MatSlideToggleModule,\n    // MatSliderModule,\n    // MatStepperModule,\n    // MatTooltipModule,\n    // OwlDateTimeModule,\n    // OwlNativeDateTimeModule,\n    // NgxMaskModule,\n    // ColorPickerModule,\n  ]\n})\nexport class ProveedoresModule { }\n"],"names":[],"sourceRoot":"webpack:///"}